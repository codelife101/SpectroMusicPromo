{"ast":null,"code":"var _jsxFileName = \"/Users/WInaloto/Desktop/react-player/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\"; // Import styless\n\nimport './styles/app.scss'; // Adding compontents\n\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport data from './util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // ref\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  }; // state\n  // const [songs,setSongs] = useState(data());\n\n\n  const [songs, setSongs] = useState(data);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      songInfo: songInfo,\n      setSongInfo: setSongInfo,\n      audioRef: audioRef,\n      currentSong: currentSong,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      audioRef: audioRef,\n      songs: songs,\n      setCurrentSong: setCurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      onLoadedMetadata: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6GRzj4oYjMH5uzz5ovnGGq/O+Aw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/WInaloto/Desktop/react-player/src/App.js"],"names":["React","useState","useRef","Player","Song","Library","data","App","audioRef","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","current","target","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC,C,CACA;;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf;AACE,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAKF,QAAMC,iBAAiB,GAAIC,CAAD,IAAM;AAC5B,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASL,WAAzB;AACA,UAAMC,QAAQ,GAAGE,CAAC,CAACE,MAAF,CAASJ,QAA1B;AACAF,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,MAAAA,WAAW,EAACI,OAA1B;AAAmCH,MAAAA;AAAnC,KAAD,CAAX;AACH,GAJD,CARe,CAaf;AACA;;;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACK,IAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAACgB,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEkB;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEV,QAAlB;AAA4B,MAAA,WAAW,EAAEC,WAAzC;AAAsD,MAAA,QAAQ,EAAEF,QAAhE;AAA0E,MAAA,WAAW,EAAEW,WAAvF;AAAoG,MAAA,SAAS,EAAEE,SAA/G;AAA0H,MAAA,YAAY,EAAEC;AAAxI;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEd,QAAnB;AAA6B,MAAA,KAAK,EAAES,KAApC;AAA2C,MAAA,cAAc,EAAEG;AAA3D;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,YAAY,EAAEP,iBAArB;AAAwC,MAAA,gBAAgB,EAAEA,iBAA1D;AAA6E,MAAA,GAAG,EAAEL,QAAlF;AAA4F,MAAA,GAAG,EAAEW,WAAW,CAACI;AAA7G;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7BQhB,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, {useState,useRef} from \"react\";\n// Import styless\nimport './styles/app.scss';\n// Adding compontents\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\n\nimport data from './util';\n\nfunction App() {\n// ref\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n});\n\nconst timeUpdateHandler = (e) =>{\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime:current, duration});\n};\n// state\n// const [songs,setSongs] = useState(data());\nconst [songs, setSongs] = useState(data);\nconst [currentSong, setCurrentSong] = useState(songs[0]);\nconst [isPlaying, setIsPlaying] = useState(false);\n\n\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player songInfo={songInfo} setSongInfo={setSongInfo} audioRef={audioRef} currentSong={currentSong} isPlaying={isPlaying} setIsPlaying={setIsPlaying} />\n      <Library audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong}/>\n      <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}