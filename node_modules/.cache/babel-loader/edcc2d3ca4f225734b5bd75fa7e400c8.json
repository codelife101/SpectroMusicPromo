{"ast":null,"code":"var _jsxFileName = \"/Users/WInaloto/Desktop/react-player/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { FontAwesomeIcon, FontAwesomrIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef\n}) => {\n  _s();\n\n  // Ref\n  // Event handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  }; // state\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: dragHandler,\n        min: 0,\n        max: songInfo.duration,\n        value: songInfo.currentTime,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      onLoadedMetadata: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"ezKFfqG7lyXi+X2djNTcRubDthU=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/WInaloto/Desktop/react-player/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","FontAwesomrIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","songInfo","setSongInfo","currentTime","duration","timeUpdateHandler","e","target","getTime","time","Math","floor","slice","dragHandler","value","audio"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {FontAwesomeIcon, FontAwesomrIcon} from '@fortawesome/react-fontawesome';\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({currentSong, isPlaying, setIsPlaying,audioRef}) => {\n// Ref\n\n // Event handlers\nconst playSongHandler= () => {\n    if(isPlaying){\n        audioRef.current.pause();\n        setIsPlaying(!isPlaying);\n    } else{\n        audioRef.current.play();\n        setIsPlaying(!isPlaying);\n    }\n};\n    // state\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n    });\n\n    const timeUpdateHandler = (e) =>{\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({...songInfo, currentTime:current, duration});\n    };\n\n    const getTime = (time) => {\n    return(\n        Math.floor(time / 60) +\":\" + (\"0\" + Math.floor((time) % 60)).slice(-2));\n    };\n\n    const dragHandler= (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime:e.target.value});\n    }\n\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" />\n                <p>{getTime(songInfo.duration)}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon className=\"skip-back\" size='2x' icon={faAngleLeft}/>\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size='2x' icon={isPlaying ? faPause : faPlay}/>\n                <FontAwesomeIcon className=\"skip-forward\" size='2x' icon={faAngleRight}/>\n            </div>\n            <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}