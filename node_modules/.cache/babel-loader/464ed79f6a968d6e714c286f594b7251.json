{"ast":null,"code":"var _jsxFileName = \"/Users/WInaloto/Desktop/react-player/src/components/Player.js\";\nimport React from 'react';\nimport { FontAwesomeIcon, FontAwesomrIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  setSongs,\n  setCurrentSong,\n  songs,\n  songInfo,\n  setSongInfo,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef\n}) => {\n  // UseEffect\n  const acttiveLibraryHandler = () => {\n    const newSongs = songs.map(song => {\n      if (song.id === currentSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  }; // Event handlers\n\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n\n    if (isPlaying) audioRef.current.play();\n  }; // add the styles\n\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\n        },\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          min: 0,\n          max: songInfo.duration || 0,\n          value: songInfo.currentTime,\n          onChange: dragHandler,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.duration ? getTime(songInfo.duration) : \"0.00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-back'),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler('skip-forward'),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/WInaloto/Desktop/react-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","FontAwesomrIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","setSongs","setCurrentSong","songs","songInfo","setSongInfo","currentSong","isPlaying","setIsPlaying","audioRef","acttiveLibraryHandler","newSongs","map","song","id","active","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","background","color","duration"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FontAwesomeIcon, FontAwesomrIcon} from '@fortawesome/react-fontawesome';\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\n\n\nconst Player = ({setSongs, setCurrentSong, songs,songInfo, setSongInfo, currentSong, isPlaying, setIsPlaying,audioRef}) => {\n// UseEffect\n\nconst acttiveLibraryHandler = () =>{\n    const newSongs = songs.map((song) =>{\n        if(song.id === currentSong.id) {\n            return{\n                ...song,\n                active: true,\n            };\n        } else {\n            return{\n                ...song,\n                active:false,\n            };\n        }\n    });\n    setSongs(newSongs);\n};\n\n // Event handlers\nconst playSongHandler= () => {\n    if(isPlaying){\n        audioRef.current.pause();\n        setIsPlaying(!isPlaying);\n    } else{\n        audioRef.current.play();\n        setIsPlaying(!isPlaying);\n    }\n};\n\n\n    const getTime = (time) => {\n    return(\n        Math.floor(time / 60) +\":\" + (\"0\" + Math.floor((time) % 60)).slice(-2));\n    };\n\n    const dragHandler= (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime:e.target.value});\n    };\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n           await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        } if (direction === 'skip-back'){\n            if((currentIndex - 1) % songs.length === -1){\n                await  setCurrentSong(songs[songs.length -1]);\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n    };\n    // add the styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    };\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{ background:`linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})` }} className=\"track\">\n                <input \n                min={0} \n                max={songInfo.duration || 0} \n                value={songInfo.currentTime} \n                onChange={dragHandler} \n                type=\"range\" />\n                <div style={trackAnim} className=\"animate-track\"></div>\n            </div>\n            \n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size='2x' icon={faAngleLeft}/>\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size='2x' icon={isPlaying ? faPause : faPlay}/>\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size='2x' icon={faAngleRight}/>\n            </div>\n            {/* <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio> */}\n        </div>\n    )\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}